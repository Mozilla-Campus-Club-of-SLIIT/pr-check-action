name: PR Check
author: Mozilla-Campus-Club-of-SLIIT
description: Ensures PR compliance with project guidelines
inputs:
  token:
    description: GITHUB_TOKEN or repo scoped PAT
    required: false
    default: ${{ github.token }}
  comment-author:
    description: The account's name which the command check review should be published. Use [bot] suffix for apps.
    required: false
    default: github-actions[bot]
  check-closing-statement:
    description: Run the closing statement checker ONLY if this input is set to true
    required: false
    default: false
  check-unchecked-boxes:
    description: Check if all checkboxes are checked ONLY if this input is set to true
    required: false
    default: false
  require-nondefault-branch:
    description: Check if the PR is originating from a non-default branch
    required: false
    default: false
  no-closing-message:
    description: Custom message when no closing statement found
    required: false
  unchecked-boxes-message:
    description: Custom message when there are unchecked checkboxes
    required: false
  unchecked-box-group-message:
    description: Custom message template for each checkbox group. Use placeholders {group}, {unchecked}, {all}
    required: false
  branch-error-message:
    description: Custom message when the PR is not originating from a non-default branch
    required: false
  success-message:
    description: Custom message when all checks pass
    required: false
runs:
  using: composite
  steps:
    - name: Find Comment
      uses: peter-evans/find-comment@v3
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: ${{ inputs.comment-author }}
        token: ${{ inputs.token }}

    - name: Check PR
      id: check
      continue-on-error: true
      shell: sh
      run: |
        if python ${{ github.action_path }}/index.py > tmp; then
          exit_code=0
        else
          exit_code=$?
        fi
        echo "output<<EOF" >> $GITHUB_OUTPUT
        cat tmp >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        echo "exit_code=$exit_code" >> $GITHUB_OUTPUT
      env:
        PR_DESCRIPTION: ${{ github.event.pull_request.body }}
        CHECK_CLOSING_STATEMENT: ${{ inputs.check-closing-statement }}
        CHECK_UNCHECKED_BOXES: ${{ inputs.check-unchecked-boxes }}
        REQUIRE_NONDEFAULT_BRANCH: ${{ inputs.require-nondefault-branch }}
        DEFAULT_BRANCH: ${{ github.event.pull_request.base.repo.default_branch }}
        PR_BRANCH: ${{ github.event.pull_request.head.ref }}
        NO_CLOSING_MESSAGE: ${{ inputs.no-closing-message }}
        UNCHECKED_BOXES_MESSAGE: ${{ inputs.unchecked-boxes-message }}
        UNCHECKED_BOX_GROUP_MESSAGE: ${{ inputs.unchecked-box-group-message }}
        SUCCESS_MESSAGE: ${{ inputs.success-message }}

    - name: Create comment
      if: ${{ steps.fc.outputs.comment-id || steps.check.outputs.exit_code != '0' }}
      uses: peter-evans/create-or-update-comment@v5
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-id: ${{ steps.fc.outputs.comment-id }}
        token: ${{ inputs.token }}
        body: ${{ steps.check.outputs.output }}
        edit-mode: replace

    - name: Report errors
      if: ${{ steps.check.outputs.exit_code != '0' }}
      run: exit 1
      shell: sh
